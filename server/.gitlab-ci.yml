stages:
  - 🔍 test
  - 📦 build
  - 🐋 deploy

variables:
  MAVEN_OPTS: "-Dmaven.repo.local=./.m2/repository"

cache:
  paths:
    - ./.m2/

test:
  stage: 🔍 test
  image: openjdk:11-jdk-buster
  script:
    - apt-get update && apt-get -y install maven && apt-get clean
    - mvn $MAVEN_OPTS test
  artifacts:
    reports:
      junit:
        - target/surefire-reports/*.xml
        - target/failsafe-reports/*.xml

sonar:
  stage: 🔍 test
  image: openjdk:11-jdk-buster
  coverage: '/Total.*?([0-9]{1,3})%/'
  script:
    - apt-get update && apt-get -y install maven && apt-get clean
    - mvn $MAVEN_OPTS test jacoco:report
    - cat target/site/jacoco/index.html

build:
  stage: 📦 build
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME .
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
  only:
    - master

deploy:
  stage: 🐋 deploy
  image: ubuntu:20.04
  variables:
    GIT_STRATEGY: none
  before_script:
    - apt update
    - apt install -y git curl 
    - mkdir -p /root/.ssh
    - echo "$SSH_PRIVATE_DEPLOYMENT_REPOSITORY" > /root/.ssh/id_rsa
    - ssh-keyscan -H gitlab.com > /root/.ssh/known_hosts
    - chmod 600 /root/.ssh/id_rsa
    - git config --global user.name "Gitlab CI/CD - $CI_PROJECT_NAME"
    - git config --global user.email "$CI_PROJECT_NAME@gitlab.com"
    - curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh"  | bash
    - mv kustomize /usr/local/bin/
    - git clone --single-branch --branch master git@gitlab.com:$CI_PROJECT_NAMESPACE/deployment.git
    - cd deployment
  script:
    - GROUP_NAME=`echo $CI_PROJECT_NAMESPACE | cut -d '/' -f 4`
    - |
      cat > patch-ingress-server.yaml << EOF
      apiVersion: traefik.containo.us/v1alpha1
      kind: IngressRoute
      metadata:
        name: server
      spec:
        routes:
        - kind: Rule
          match: Host("${GROUP_NAME}.k8s.azae.eu") && PathPrefix("/api")
          priority: 10
          services:
          - name: server
            port: 8080
      EOF
    - kustomize edit set image not_working/server=$CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
    - git commit -am "[gitlab] server image update to version $CI_COMMIT_SHORT_SHA"
    - git push origin master
  only:
    - master
